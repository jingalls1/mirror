{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\Jacob\\\\Documents\\\\coding for fun\\\\react\\\\lampcontrol\\\\src\\\\App.js\",\"C:\\\\Users\\\\Jacob\\\\Documents\\\\coding for fun\\\\react\\\\lampcontrol\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\Jacob\\\\Documents\\\\coding for fun\\\\react\\\\lampcontrol\\\\src\\\\index.js\"],\"names\":[\"apiKey\",\"App\",\"concat\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onLampHandler\",\"console\",\"log\",\"alert\",\"offLampHandler\",\"state\",\"react_default\",\"a\",\"createElement\",\"style\",\"textAlign\",\"fontSize\",\"Button_default\",\"color\",\"variant\",\"size\",\"onClick\",\"React\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"0QAMMA,kBAAS,+CA6DAC,GA5DJ,oDAAAC,OAAuDF,GACtD,qDAAAE,OAAwDF,eAGlE,SAAAC,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KAIRQ,cAAgB,WAEdC,QAAQC,IAAI,mBAGZC,MAAM,mCAVWV,EAanBW,eAAiB,WAEfH,QAAQC,IAAI,oBAGZC,MAAM,8BAhBNV,EAAKY,MAAQ,GAFIZ,wEAuBjB,OADAU,MAAM,uCAEJG,EAAAC,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAEC,UAAW,WACvBJ,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,KAAA,KAAA,uBACAF,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAACC,UAAW,SAAUC,SAAU,QAA5C,uBACAL,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEM,MAAM,UACNC,QAAQ,YACRC,KAAK,QACLC,QAASpB,KAAKI,eAEb,IANH,oBASAM,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEM,MAAM,YACNC,QAAQ,YACRC,KAAK,QACLC,QAASpB,KAAKQ,gBAEb,IANH,gBAOgB,aAjDNa,EAAAA,EAAMC,YCEJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport Button from \\\"@material-ui/core/Button\\\";\\nimport { ContentBlock } from \\\"material-ui/svg-icons\\\";\\nimport axios from \\\"axios\\\";\\n\\nconst apiKey = \\\"mMqNcOe88sAYCMRMSeAyEl8eR2Mmc2EeZji6SqiLWpD\\\";\\nconst onReq = `https://maker.ifttt.com/trigger/Lamp on/with/key/${apiKey}`;\\nconst offReq = `https://maker.ifttt.com/trigger/Lamp off/with/key/${apiKey}`;\\n\\nclass App extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {};\\n  }\\n\\n  onLampHandler = () => {\\n    //hey\\n    console.log(\\\"on lamp clicked\\\");\\n    //axios.get(onReq).then(response => console.log(response));\\n    //window.open('http://www.pornhub.com', '_blank')\\n    alert(\\\"lamp not gonna turn on ya shit\\\")\\n  };\\n\\n  offLampHandler = () => {\\n    //hey\\n    console.log(\\\"off lamp clicked\\\");\\n    //axios.get(offReq).then(response => console.log(response));\\n    //window.open('http://www.pornhub.com', '_blank')\\n    alert(\\\"not gonna mf go on stopit\\\")\\n  };\\n\\n  render() {\\n    alert('stop tryna fuck w my lamp lil bitch')\\n    return (\\n      <div style={{ textAlign: \\\"center\\\" }}>\\n        <br />\\n        <h2> Jacob's home lamp </h2>\\n        <br />\\n        <div style={{textAlign: \\\"center\\\", fontSize: \\\"7px\\\"}}> Fuck you lil bitch</div>\\n        <br />\\n        <Button\\n          color=\\\"primary\\\"\\n          variant=\\\"contained\\\"\\n          size=\\\"large\\\"\\n          onClick={this.onLampHandler}\\n        >\\n          {\\\" \\\"}\\n          Turn on the lamp\\n        </Button>\\n        <br />\\n        <br />\\n        <Button\\n          color=\\\"secondary\\\"\\n          variant=\\\"contained\\\"\\n          size=\\\"large\\\"\\n          onClick={this.offLampHandler}\\n        >\\n          {\\\" \\\"}\\n          Turn off lamp{\\\" \\\"}\\n        </Button>\\n      </div>\\n    );\\n  }\\n}\\n\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{105:function(e,t,n){e.exports=n(1232)},110:function(e,t,n){},1232:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),r=n(24),l=n.n(r),c=(n(110),n(99)),i=n(100),m=n(103),s=n(101),u=n(104),p=n(63),f=n.n(p),h=(n(111),n(1132),\"mMqNcOe88sAYCMRMSeAyEl8eR2Mmc2EeZji6SqiLWpD\"),d=(\"https://maker.ifttt.com/trigger/Lamp on/with/key/\".concat(h),\"https://maker.ifttt.com/trigger/Lamp off/with/key/\".concat(h),function(e){function t(e){var n;return Object(c.a)(this,t),(n=Object(m.a)(this,Object(s.a)(t).call(this,e))).onLampHandler=function(){console.log(\"on lamp clicked\"),alert(\"lamp not gonna turn on ya shit\")},n.offLampHandler=function(){console.log(\"off lamp clicked\"),alert(\"not gonna mf go on stopit\")},n.state={},n}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return alert(\"stop tryna fuck w my lamp lil bitch\"),o.a.createElement(\"div\",{style:{textAlign:\"center\"}},o.a.createElement(\"br\",null),o.a.createElement(\"h2\",null,\" Jacob's home lamp \"),o.a.createElement(\"br\",null),o.a.createElement(\"div\",{style:{textAlign:\"center\",fontSize:\"7px\"}},\" Fuck you lil bitch\"),o.a.createElement(\"br\",null),o.a.createElement(f.a,{color:\"primary\",variant:\"contained\",size:\"large\",onClick:this.onLampHandler},\" \",\"Turn on the lamp\"),o.a.createElement(\"br\",null),o.a.createElement(\"br\",null),o.a.createElement(f.a,{color:\"secondary\",variant:\"contained\",size:\"large\",onClick:this.offLampHandler},\" \",\"Turn off lamp\",\" \"))}}]),t}(o.a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(o.a.createElement(d,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[105,1,2]]]);","extractedComments":[]}